- name: Download Apple Provisioning Profiles
  # You may pin to the exact commit or the version.
  # uses: Apple-Actions/download-provisioning-profiles@3167792207a5b26099bc0ca22b5010a323dd2a0b
  uses: Apple-Actions/download-provisioning-profiles@v1
  with:
    # The bundle identifier of the application
    bundle-id: 
    # The type of profile to download. One of IOS_APP_DEVELOPMENT, IOS_APP_STORE, IOS_APP_ADHOC, IOS_APP_INHOUSE, MAC_APP_DEVELOPMENT, MAC_APP_STORE, MAC_APP_DIRECT, TVOS_APP_DEVELOPMENT, TVOS_APP_STORE, TVOS_APP_ADHOC, TVOS_APP_INHOUSE
    profile-type: # optional
    # The AppStore Connect API Key Issuer Identifier
    issuer-id: 
    # The Key ID for AppStore Connect API
    api-key-id: 
    # The PKCS8 format Private Key for AppStore Connect API
    api-private-key: 
# Simple workflow for deploying static content to GitHub Pages
- name: Download a Build Artifact
  uses: actions/download-artifact@v3.0.0
  with:
    # Artifact name
    name: # optional
    # Destination path
    path: # optional
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
